# 1 "lexer.mll"
 
  open Lexing
  open Parser
  exception Error of string

  let next_line lexbuf =
    let pos = lexbuf.lex_curr_p in
    lexbuf.lex_curr_p <-
      { pos with pos_bol = lexbuf.lex_curr_pos;
                 pos_lnum = pos.pos_lnum + 1
      }

# 15 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\227\255\018\000\027\000\024\000\022\000\030\000\031\000\
    \032\000\022\000\034\000\243\255\244\255\245\255\246\255\247\255\
    \248\255\249\255\250\255\025\000\047\000\253\255\254\255\255\255\
    \019\000\242\255\023\000\038\000\026\000\038\000\037\000\241\255\
    \025\000\026\000\232\255\060\000\054\000\058\000\063\000\073\000\
    \240\255\059\000\004\000\059\000\076\000\229\255\063\000\007\000\
    \074\000\070\000\082\000\081\000\086\000\067\000\239\255\068\000\
    \070\000\008\000\082\000\078\000\090\000\089\000\094\000\075\000\
    \238\255\096\000\084\000\092\000\095\000\002\000\085\000\087\000\
    \082\000\092\000\100\000\085\000\089\000\237\255\107\000\100\000\
    \091\000\092\000\107\000\092\000\096\000\236\255\113\000\095\000\
    \097\000\235\255\109\000\110\000\106\000\234\255\231\255\103\000\
    \117\000\228\255\109\000\109\000\111\000\230\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\004\000\003\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\022\000\255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\000\000\000\000\000\000\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\000\000\000\000\255\255\
    \255\255\000\000\255\255\255\255\255\255\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\023\000\022\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \023\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \012\000\011\000\016\000\018\000\000\000\017\000\000\000\015\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\000\000\013\000\000\000\014\000\000\000\000\000\
    \000\000\009\000\007\000\005\000\004\000\071\000\003\000\070\000\
    \006\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\002\000\008\000\043\000\010\000\048\000\
    \058\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\098\000\090\000\086\000\065\000\055\000\
    \046\000\035\000\026\000\024\000\092\000\025\000\032\000\028\000\
    \029\000\030\000\031\000\033\000\027\000\034\000\091\000\036\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\041\000\037\000\038\000\039\000\040\000\042\000\
    \044\000\045\000\047\000\049\000\050\000\051\000\052\000\053\000\
    \054\000\056\000\057\000\059\000\060\000\061\000\062\000\063\000\
    \064\000\066\000\067\000\068\000\069\000\078\000\072\000\073\000\
    \074\000\075\000\076\000\077\000\079\000\080\000\081\000\082\000\
    \083\000\084\000\085\000\087\000\088\000\089\000\095\000\094\000\
    \093\000\096\000\097\000\099\000\100\000\101\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\255\255\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\255\255\000\000\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\069\000\000\000\069\000\
    \000\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\000\000\000\000\042\000\000\000\047\000\
    \057\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\002\000\003\000\004\000\005\000\006\000\
    \007\000\008\000\009\000\010\000\003\000\024\000\026\000\027\000\
    \028\000\029\000\030\000\032\000\009\000\033\000\003\000\008\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\035\000\036\000\037\000\038\000\039\000\041\000\
    \043\000\044\000\046\000\048\000\049\000\050\000\051\000\052\000\
    \053\000\055\000\056\000\058\000\059\000\060\000\061\000\062\000\
    \063\000\065\000\066\000\067\000\068\000\070\000\071\000\072\000\
    \073\000\074\000\075\000\076\000\078\000\079\000\080\000\081\000\
    \082\000\083\000\084\000\086\000\087\000\088\000\090\000\091\000\
    \092\000\095\000\096\000\098\000\099\000\100\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 15 "lexer.mll"
                           ( token lexbuf )
# 176 "lexer.ml"

  | 1 ->
# 16 "lexer.mll"
                           ( next_line lexbuf; token lexbuf )
# 181 "lexer.ml"

  | 2 ->
# 17 "lexer.mll"
                           ( EOF )
# 186 "lexer.ml"

  | 3 ->
let
# 18 "lexer.mll"
                     s
# 192 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 18 "lexer.mll"
                           ( IDENT s)
# 196 "lexer.ml"

  | 4 ->
let
# 19 "lexer.mll"
                     n
# 202 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 19 "lexer.mll"
                           ( NOMBRE (int_of_string n) )
# 206 "lexer.ml"

  | 5 ->
# 20 "lexer.mll"
                           ( PLUS )
# 211 "lexer.ml"

  | 6 ->
# 21 "lexer.mll"
                           ( MOINS )
# 216 "lexer.ml"

  | 7 ->
# 22 "lexer.mll"
                    ( MULT )
# 221 "lexer.ml"

  | 8 ->
# 23 "lexer.mll"
                    ( DIV )
# 226 "lexer.ml"

  | 9 ->
# 24 "lexer.mll"
                    ( EGAL )
# 231 "lexer.ml"

  | 10 ->
# 25 "lexer.mll"
                    ( PV )
# 236 "lexer.ml"

  | 11 ->
# 26 "lexer.mll"
                    ( LPAREN )
# 241 "lexer.ml"

  | 12 ->
# 27 "lexer.mll"
                    ( RPAREN )
# 246 "lexer.ml"

  | 13 ->
# 28 "lexer.mll"
                    ( VAR )
# 251 "lexer.ml"

  | 14 ->
# 29 "lexer.mll"
                    ( AVANCE )
# 256 "lexer.ml"

  | 15 ->
# 30 "lexer.mll"
                    ( TOURNE )
# 261 "lexer.ml"

  | 16 ->
# 31 "lexer.mll"
                        ( BASPINCEAU )
# 266 "lexer.ml"

  | 17 ->
# 32 "lexer.mll"
                         ( HAUTPINCEAU )
# 271 "lexer.ml"

  | 18 ->
# 33 "lexer.mll"
                           ( CHANGECOULEUR )
# 276 "lexer.ml"

  | 19 ->
# 34 "lexer.mll"
                           ( CHANGEEPAISSEUR )
# 281 "lexer.ml"

  | 20 ->
# 35 "lexer.mll"
                    ( DEBUT )
# 286 "lexer.ml"

  | 21 ->
# 36 "lexer.mll"
                    ( FIN )
# 291 "lexer.ml"

  | 22 ->
# 37 "lexer.mll"
                   ( SI )
# 296 "lexer.ml"

  | 23 ->
# 38 "lexer.mll"
                      ( ALORS )
# 301 "lexer.ml"

  | 24 ->
# 39 "lexer.mll"
                     ( FSI )
# 306 "lexer.ml"

  | 25 ->
# 40 "lexer.mll"
                     ( SINON )
# 311 "lexer.ml"

  | 26 ->
# 41 "lexer.mll"
                       ( TANTQUE )
# 316 "lexer.ml"

  | 27 ->
# 42 "lexer.mll"
                     ( FAIRE )
# 321 "lexer.ml"

  | 28 ->
# 43 "lexer.mll"
                    ( raise (Error (Lexing.lexeme lexbuf)) )
# 326 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

